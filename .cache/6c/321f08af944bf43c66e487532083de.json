{"id":"node_modules/read-excel-file/modules/types/String.js","dependencies":[{"name":"C:\\Users\\Jacob\\Documents\\Grups\\node_modules\\read-excel-file\\modules\\types\\String.js.map","includedInParent":true,"mtime":1693066347276},{"name":"C:\\Users\\Jacob\\Documents\\Grups\\package.json","includedInParent":true,"mtime":1693066347534},{"name":"C:\\Users\\Jacob\\Documents\\Grups\\node_modules\\read-excel-file\\package.json","includedInParent":true,"mtime":1693066347009},{"name":"./InvalidError.js","loc":{"line":1,"column":25,"index":25},"parent":"C:\\Users\\Jacob\\Documents\\Grups\\node_modules\\read-excel-file\\modules\\types\\String.js","resolved":"C:\\Users\\Jacob\\Documents\\Grups\\node_modules\\read-excel-file\\modules\\types\\InvalidError.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = StringType;\nvar _InvalidError = _interopRequireDefault(require(\"./InvalidError.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction StringType(value) {\n  if (typeof value === 'string') {\n    return value;\n  } // Excel tends to perform a forced automatic convertion of string-type values\n  // to number-type ones when the user has input them. Otherwise, users wouldn't\n  // be able to perform formula calculations on those cell values because users\n  // won't bother manually choosing a \"numeric\" cell type for each cell, and\n  // even if they did, choosing a \"numeric\" cell type every time wouldn't be an\n  // acceptable \"user experience\".\n  //\n  // So, if a cell value is supposed to be a string and Excel has automatically\n  // converted it to a number, perform a backwards conversion.\n  //\n\n  if (typeof value === 'number') {\n    if (isNaN(value)) {\n      throw new _InvalidError.default('invalid_number');\n    } // The global `isFinite()` function filters out:\n    // * NaN\n    // * -Infinity\n    // * Infinity\n    //\n    // All other values pass (including non-numbers).\n    //\n\n    if (!isFinite(value)) {\n      throw new _InvalidError.default('out_of_bounds');\n    }\n    return String(value);\n  }\n  throw new _InvalidError.default('not_a_string');\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../source/types/String.js","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":0}},{"source":"../../source/types/String.js","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":4}},{"source":"../../source/types/String.js","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":17}},{"source":"../../source/types/String.js","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":20}},{"source":"../../source/types/String.js","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":42}},{"source":"../../source/types/String.js","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":43}},{"source":"../../source/types/String.js","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":50}},{"source":"../../source/types/String.js","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../source/types/String.js","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":9}},{"source":"../../source/types/String.js","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":32}},{"source":"../../source/types/String.js","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":35}},{"source":"../../source/types/String.js","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":46}},{"source":"../../source/types/String.js","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":49}},{"source":"../../source/types/String.js","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":53}},{"source":"../../source/types/String.js","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":56}},{"source":"../../source/types/String.js","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":57}},{"source":"../../source/types/String.js","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":67}},{"source":"../../source/types/String.js","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":70}},{"source":"../../source/types/String.js","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":73}},{"source":"../../source/types/String.js","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":78}},{"source":"../../source/types/String.js","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":85}},{"source":"../../source/types/String.js","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":87}},{"source":"../../source/types/String.js","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":90}},{"source":"../../source/types/String.js","name":null,"original":{"line":3,"column":15},"generated":{"line":9,"column":0}},{"source":"../../source/types/String.js","name":"StringType","original":{"line":3,"column":24},"generated":{"line":9,"column":9}},{"source":"../../source/types/String.js","name":null,"original":{"line":3,"column":15},"generated":{"line":9,"column":19}},{"source":"../../source/types/String.js","name":"value","original":{"line":3,"column":35},"generated":{"line":9,"column":20}},{"source":"../../source/types/String.js","name":null,"original":{"line":3,"column":15},"generated":{"line":9,"column":25}},{"source":"../../source/types/String.js","name":null,"original":{"line":3,"column":42},"generated":{"line":9,"column":27}},{"source":"../../source/types/String.js","name":null,"original":{"line":4,"column":2},"generated":{"line":10,"column":2}},{"source":"../../source/types/String.js","name":null,"original":{"line":4,"column":6},"generated":{"line":10,"column":6}},{"source":"../../source/types/String.js","name":"value","original":{"line":4,"column":13},"generated":{"line":10,"column":13}},{"source":"../../source/types/String.js","name":null,"original":{"line":4,"column":6},"generated":{"line":10,"column":18}},{"source":"../../source/types/String.js","name":null,"original":{"line":4,"column":23},"generated":{"line":10,"column":23}},{"source":"../../source/types/String.js","name":null,"original":{"line":4,"column":2},"generated":{"line":10,"column":31}},{"source":"../../source/types/String.js","name":null,"original":{"line":4,"column":33},"generated":{"line":10,"column":33}},{"source":"../../source/types/String.js","name":null,"original":{"line":5,"column":4},"generated":{"line":11,"column":4}},{"source":"../../source/types/String.js","name":"value","original":{"line":5,"column":11},"generated":{"line":11,"column":11}},{"source":"../../source/types/String.js","name":null,"original":{"line":5,"column":4},"generated":{"line":11,"column":16}},{"source":"../../source/types/String.js","name":null,"original":{"line":6,"column":3},"generated":{"line":12,"column":2}},{"source":"../../source/types/String.js","name":null,"original":{"line":3,"column":42},"generated":{"line":12,"column":3}},{"source":"../../source/types/String.js","name":null,"original":{"line":7,"column":2},"generated":{"line":12,"column":4}},{"source":"../../source/types/String.js","name":null,"original":{"line":8,"column":2},"generated":{"line":13,"column":2}},{"source":"../../source/types/String.js","name":null,"original":{"line":9,"column":2},"generated":{"line":14,"column":2}},{"source":"../../source/types/String.js","name":null,"original":{"line":10,"column":2},"generated":{"line":15,"column":2}},{"source":"../../source/types/String.js","name":null,"original":{"line":11,"column":2},"generated":{"line":16,"column":2}},{"source":"../../source/types/String.js","name":null,"original":{"line":12,"column":2},"generated":{"line":17,"column":2}},{"source":"../../source/types/String.js","name":null,"original":{"line":13,"column":2},"generated":{"line":18,"column":2}},{"source":"../../source/types/String.js","name":null,"original":{"line":14,"column":2},"generated":{"line":19,"column":2}},{"source":"../../source/types/String.js","name":null,"original":{"line":15,"column":2},"generated":{"line":20,"column":2}},{"source":"../../source/types/String.js","name":null,"original":{"line":16,"column":2},"generated":{"line":21,"column":2}},{"source":"../../source/types/String.js","name":null,"original":{"line":17,"column":2},"generated":{"line":23,"column":2}},{"source":"../../source/types/String.js","name":null,"original":{"line":17,"column":6},"generated":{"line":23,"column":6}},{"source":"../../source/types/String.js","name":"value","original":{"line":17,"column":13},"generated":{"line":23,"column":13}},{"source":"../../source/types/String.js","name":null,"original":{"line":17,"column":6},"generated":{"line":23,"column":18}},{"source":"../../source/types/String.js","name":null,"original":{"line":17,"column":23},"generated":{"line":23,"column":23}},{"source":"../../source/types/String.js","name":null,"original":{"line":17,"column":2},"generated":{"line":23,"column":31}},{"source":"../../source/types/String.js","name":null,"original":{"line":17,"column":33},"generated":{"line":23,"column":33}},{"source":"../../source/types/String.js","name":null,"original":{"line":18,"column":4},"generated":{"line":24,"column":4}},{"source":"../../source/types/String.js","name":"isNaN","original":{"line":18,"column":8},"generated":{"line":24,"column":8}},{"source":"../../source/types/String.js","name":null,"original":{"line":18,"column":13},"generated":{"line":24,"column":13}},{"source":"../../source/types/String.js","name":"value","original":{"line":18,"column":14},"generated":{"line":24,"column":14}},{"source":"../../source/types/String.js","name":null,"original":{"line":18,"column":13},"generated":{"line":24,"column":19}},{"source":"../../source/types/String.js","name":null,"original":{"line":18,"column":4},"generated":{"line":24,"column":20}},{"source":"../../source/types/String.js","name":null,"original":{"line":18,"column":22},"generated":{"line":24,"column":22}},{"source":"../../source/types/String.js","name":null,"original":{"line":19,"column":6},"generated":{"line":25,"column":6}},{"source":"../../source/types/String.js","name":null,"original":{"line":19,"column":12},"generated":{"line":25,"column":12}},{"source":"../../source/types/String.js","name":"InvalidError","original":{"line":19,"column":16},"generated":{"line":25,"column":16}},{"source":"../../source/types/String.js","name":null,"original":{"line":19,"column":12},"generated":{"line":25,"column":37}},{"source":"../../source/types/String.js","name":null,"original":{"line":19,"column":29},"generated":{"line":25,"column":38}},{"source":"../../source/types/String.js","name":null,"original":{"line":19,"column":12},"generated":{"line":25,"column":54}},{"source":"../../source/types/String.js","name":null,"original":{"line":19,"column":6},"generated":{"line":25,"column":55}},{"source":"../../source/types/String.js","name":null,"original":{"line":20,"column":5},"generated":{"line":26,"column":4}},{"source":"../../source/types/String.js","name":null,"original":{"line":17,"column":33},"generated":{"line":26,"column":5}},{"source":"../../source/types/String.js","name":null,"original":{"line":21,"column":4},"generated":{"line":26,"column":6}},{"source":"../../source/types/String.js","name":null,"original":{"line":22,"column":4},"generated":{"line":27,"column":4}},{"source":"../../source/types/String.js","name":null,"original":{"line":23,"column":4},"generated":{"line":28,"column":4}},{"source":"../../source/types/String.js","name":null,"original":{"line":24,"column":4},"generated":{"line":29,"column":4}},{"source":"../../source/types/String.js","name":null,"original":{"line":25,"column":4},"generated":{"line":30,"column":4}},{"source":"../../source/types/String.js","name":null,"original":{"line":26,"column":4},"generated":{"line":31,"column":4}},{"source":"../../source/types/String.js","name":null,"original":{"line":27,"column":4},"generated":{"line":32,"column":4}},{"source":"../../source/types/String.js","name":null,"original":{"line":28,"column":4},"generated":{"line":34,"column":4}},{"source":"../../source/types/String.js","name":null,"original":{"line":28,"column":8},"generated":{"line":34,"column":8}},{"source":"../../source/types/String.js","name":"isFinite","original":{"line":28,"column":9},"generated":{"line":34,"column":9}},{"source":"../../source/types/String.js","name":null,"original":{"line":28,"column":17},"generated":{"line":34,"column":17}},{"source":"../../source/types/String.js","name":"value","original":{"line":28,"column":18},"generated":{"line":34,"column":18}},{"source":"../../source/types/String.js","name":null,"original":{"line":28,"column":17},"generated":{"line":34,"column":23}},{"source":"../../source/types/String.js","name":null,"original":{"line":28,"column":4},"generated":{"line":34,"column":24}},{"source":"../../source/types/String.js","name":null,"original":{"line":28,"column":26},"generated":{"line":34,"column":26}},{"source":"../../source/types/String.js","name":null,"original":{"line":29,"column":6},"generated":{"line":35,"column":6}},{"source":"../../source/types/String.js","name":null,"original":{"line":29,"column":12},"generated":{"line":35,"column":12}},{"source":"../../source/types/String.js","name":"InvalidError","original":{"line":29,"column":16},"generated":{"line":35,"column":16}},{"source":"../../source/types/String.js","name":null,"original":{"line":29,"column":12},"generated":{"line":35,"column":37}},{"source":"../../source/types/String.js","name":null,"original":{"line":29,"column":29},"generated":{"line":35,"column":38}},{"source":"../../source/types/String.js","name":null,"original":{"line":29,"column":12},"generated":{"line":35,"column":53}},{"source":"../../source/types/String.js","name":null,"original":{"line":29,"column":6},"generated":{"line":35,"column":54}},{"source":"../../source/types/String.js","name":null,"original":{"line":30,"column":5},"generated":{"line":36,"column":4}},{"source":"../../source/types/String.js","name":null,"original":{"line":31,"column":4},"generated":{"line":37,"column":4}},{"source":"../../source/types/String.js","name":"String","original":{"line":31,"column":11},"generated":{"line":37,"column":11}},{"source":"../../source/types/String.js","name":null,"original":{"line":31,"column":17},"generated":{"line":37,"column":17}},{"source":"../../source/types/String.js","name":"value","original":{"line":31,"column":18},"generated":{"line":37,"column":18}},{"source":"../../source/types/String.js","name":null,"original":{"line":31,"column":17},"generated":{"line":37,"column":23}},{"source":"../../source/types/String.js","name":null,"original":{"line":31,"column":4},"generated":{"line":37,"column":24}},{"source":"../../source/types/String.js","name":null,"original":{"line":32,"column":3},"generated":{"line":38,"column":2}},{"source":"../../source/types/String.js","name":null,"original":{"line":33,"column":2},"generated":{"line":39,"column":2}},{"source":"../../source/types/String.js","name":null,"original":{"line":33,"column":8},"generated":{"line":39,"column":8}},{"source":"../../source/types/String.js","name":"InvalidError","original":{"line":33,"column":12},"generated":{"line":39,"column":12}},{"source":"../../source/types/String.js","name":null,"original":{"line":33,"column":8},"generated":{"line":39,"column":33}},{"source":"../../source/types/String.js","name":null,"original":{"line":33,"column":25},"generated":{"line":39,"column":34}},{"source":"../../source/types/String.js","name":null,"original":{"line":33,"column":8},"generated":{"line":39,"column":48}},{"source":"../../source/types/String.js","name":null,"original":{"line":33,"column":2},"generated":{"line":39,"column":49}},{"source":"../../source/types/String.js","name":null,"original":{"line":34,"column":1},"generated":{"line":40,"column":0}}],"sources":{"../../source/types/String.js":"import InvalidError from './InvalidError.js'\r\n\r\nexport default function StringType(value) {\r\n  if (typeof value === 'string') {\r\n    return value\r\n  }\r\n  // Excel tends to perform a forced automatic convertion of string-type values\r\n  // to number-type ones when the user has input them. Otherwise, users wouldn't\r\n  // be able to perform formula calculations on those cell values because users\r\n  // won't bother manually choosing a \"numeric\" cell type for each cell, and\r\n  // even if they did, choosing a \"numeric\" cell type every time wouldn't be an\r\n  // acceptable \"user experience\".\r\n  //\r\n  // So, if a cell value is supposed to be a string and Excel has automatically\r\n  // converted it to a number, perform a backwards conversion.\r\n  //\r\n  if (typeof value === 'number') {\r\n    if (isNaN(value)) {\r\n      throw new InvalidError('invalid_number')\r\n    }\r\n    // The global `isFinite()` function filters out:\r\n    // * NaN\r\n    // * -Infinity\r\n    // * Infinity\r\n    //\r\n    // All other values pass (including non-numbers).\r\n    //\r\n    if (!isFinite(value)) {\r\n      throw new InvalidError('out_of_bounds')\r\n    }\r\n    return String(value)\r\n  }\r\n  throw new InvalidError('not_a_string')\r\n}"},"lineCount":null}},"error":null,"hash":"f7f0c3bc4f27c313f23bd8ff9a361ecc","cacheData":{"env":{}}}